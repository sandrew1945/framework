<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
       http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
       default-lazy-init="true">
	<description>Sql Mapping配置</description>
	<!-- Shiro的主业务层:整个Shiro下Subject的处理都通过它,相当于dispatch filter -->
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<!--
        <property name="realms">
            <list>
                <ref bean="accountAuthorizationRealm"/>
            </list>
        </property>
         -->
		<property name="realm" ref="accountAuthorizationRealm"/>
		<property name="sessionManager" ref="sessionManager"/>
		<!--<property name="cacheManager" ref="cacheManager" />-->
	</bean>

	<!-- Shiro都需要通过Realm获得安全数据(用户,角色,权限),相当于data source -->
	<bean id="accountAuthorizationRealm" class="com.sandrew.mvc.shiro.AccountAuthorizationRealm">
		<property name="credentialsMatcher">
			<bean class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
				<property name="hashAlgorithmName" value="MD5" />
				<!-- true means hex encoded, false means base64 encoded -->
				<property name="storedCredentialsHexEncoded" value="true" />
				<!-- 迭代次数 -->
				<property name="hashIterations" value="1" />
			</bean>
		</property>
		<property name="cachingEnabled" value="false"/>
	</bean>


	<!-- Shiro Filter 对应web.xml的配置-->
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<property name="securityManager" ref="securityManager" />
		<property name="loginUrl" value="/login" /><!-- 登录地址 -->
		<property name="successUrl" value="/showRoleSelect" /><!-- 登录地址 -->
		<property name="unauthorizedUrl" value="/"/>
		<property name="filters">
			<util:map>
				<entry key="authc" value-ref="formAuthenticationFilter"/>
			</util:map>
		</property>
		<property name="filterChainDefinitions">
			<value>
				/login.jsp* = anon
				<!-- /login = anon -->
				/ = anon
				/logout = logout
				/error/noperms.jsp*= anon
				/**/*.jsp* = authc
				/* = authc
			</value>
		</property>
	</bean>

	<!-- 会话管理器 -->
	<bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
		<property name="globalSessionTimeout" value="1800000"/>
		<property name="deleteInvalidSessions" value="true"/>
		<property name="sessionValidationSchedulerEnabled" value="true"/>
		<property name="sessionIdCookieEnabled" value="true"/>
		<property name="sessionIdCookie" ref="sessionIdCookie"/>
	</bean>

	<!-- 缓存管理器
	<bean id="cacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
		<property name="cacheManagerConfigFile" value="classpath:conf/ehcache-shiro.xml"/>
	</bean>
	 -->

	<!-- 会话DAO
	<bean id="sessionDAO" class="com.sandrew.distributed.server.session.dao.MySqlSessionDAO">
		<property name="activeSessionsCacheName" value="shiro-activeSessionCache"/>
		<property name="sessionIdGenerator" ref="sessionIdGenerator"/>
	</bean>
	 -->

	<!-- 会话ID生成器 -->
	<bean id="sessionIdGenerator" class="org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator"/>

	<!-- 会话Cookie模板 -->
	<bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
		<constructor-arg value="sid"/>
		<property name="httpOnly" value="true"/>
		<property name="maxAge" value="-1"/>
		<property name="domain" value=""/>
		<property name="path" value="/"/>
	</bean>

	<!-- 会话验证调度器
	<bean id="sessionValidationScheduler" class="com.sandrew.distributed.server.session.schedule.MySqlSessionValidationScheduler">
		<property name="interval" value="1800000"/>
		<property name="sessionManager" ref="sessionManager"/>
	</bean>
	 -->

	<!-- 相当于调用SecurityUtils.setSecurityManager(securityManager) -->
	<bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
		<property name="staticMethod" value="org.apache.shiro.SecurityUtils.setSecurityManager"/>
		<property name="arguments" ref="securityManager"/>
	</bean>


	<!-- Shiro生命周期处理器-->
	<!--保证实现了Shiro内部lifecycle函数的bean执行-->
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>

	<!--使用@RequiresRoles,@RequiresPermissions等注解-->
	<bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"
		  depends-on="lifecycleBeanPostProcessor"/>

	<aop:config proxy-target-class="true"></aop:config>
	<bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
		<property name="securityManager" ref="securityManager"/>
	</bean>

	<!-- 基于Form表单的身份验证过滤器 -->
	<bean id="formAuthenticationFilter" class="org.apache.shiro.web.filter.authc.FormAuthenticationFilter">
		<property name="usernameParam" value="userCode"/>
		<property name="passwordParam" value="password"/>
	</bean>
</beans>